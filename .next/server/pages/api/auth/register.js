"use strict";(()=>{var e={};e.id=7007,e.ids=[7007],e.modules={8432:e=>{e.exports=require("bcryptjs")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},5900:e=>{e.exports=require("pg")},6249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,a){return a in r?r[a]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,a)):"function"==typeof r&&"default"===a?r:void 0}}})},6154:(e,r,a)=>{a.r(r),a.d(r,{config:()=>c,default:()=>u,routeModule:()=>d});var t={};a.r(t),a.d(t,{default:()=>o});var s=a(1802),l=a(7153),i=a(6249),n=a(7725);async function o(e,r){if("POST"!==e.method)return r.status(405).json({message:"Method not allowed"});let{name:a,email:t,phone:s,password:l,referral_code:i}=e.body;if(console.log("\uD83D\uDCCB Registration request body:",{name:a,email:t,phone:s?"provided":"missing",password:l?"provided":"missing",referral_code:i}),!a||!t||!s||!l)return console.log("❌ Missing required fields:",{name:!!a,email:!!t,phone:!!s,password:!!l}),r.status(400).json({message:"Missing required fields"});try{console.log("\uD83D\uDD04 Starting registration for:",t),console.log("\uD83D\uDD04 Creating user with userStore...");let e=await n.H.createUser({display_name:a,email:t,phone:s,phone_number:s,password:l});if(!e)throw console.log("❌ User creation returned null"),Error("Failed to create user - userStore returned null");console.log("✅ User created successfully:",{id:e.id,email:e.email,display_name:e.display_name,phone:e.phone});let i=`PV${Math.random().toString(36).substring(2,8).toUpperCase()}`;r.status(201).json({message:"Registration successful! You can now login with your credentials.",userId:e.id,needsVerification:!1,referralCode:i,emailSent:!1})}catch(a){if(console.error("❌ Registration error:",a),a instanceof Error){if(a.message.includes("duplicate key value violates unique constraint")){if(a.message.includes("users_email_key")||a.message.includes("email"))return r.status(400).json({message:"An account with this email address already exists. Please use a different email or try logging in.",error:"EMAIL_ALREADY_EXISTS"});if(a.message.includes("users_phone_number_key")||a.message.includes("phone_number"))return r.status(400).json({message:"An account with this phone number already exists. Please use a different phone number or try logging in.",error:"PHONE_ALREADY_EXISTS"})}if(a.message.includes("userStore returned null"))return r.status(400).json({message:"Registration failed. The email or phone number may already be in use.",error:"DUPLICATE_USER_DATA"})}let e=a instanceof Error?a.message:"Internal server error";r.status(500).json({message:e,error:a instanceof Error?a.message:"Unknown error"})}}let u=(0,i.l)(t,"default"),c=(0,i.l)(t,"config"),d=new s.PagesAPIRouteModule({definition:{kind:l.x.PAGES_API,page:"/api/auth/register",pathname:"/api/auth/register",bundlePath:"",filename:""},userland:t})},8078:(e,r,a)=>{a.d(r,{t:()=>n});var t=a(5900),s=a(8432),l=a.n(s);class i{constructor(){this.pool=new t.Pool({host:"sbpnfqrsnvtyvkgldcco.db.eu-central-1.nhost.run",port:parseInt("5432"),database:"sbpnfqrsnvtyvkgldcco",user:"postgres",password:"Provenvalueenterprise@123!",ssl:!0,max:10,min:2,idleTimeoutMillis:6e4,connectionTimeoutMillis:1e4,query_timeout:3e4,allowExitOnIdle:!0}),this.testConnection()}async testConnection(){try{let e=await this.pool.connect();console.log("✅ Direct PostgreSQL connection established"),e.release()}catch(e){console.error("❌ Direct PostgreSQL connection failed:",e)}}async findUserByEmail(e){try{let r=`
        SELECT
          u.id,
          u.display_name,
          u.email,
          u.phone_number,
          u.password_hash,
          u.email_verified,
          u.created_at,
          up.phone,
          up.wallet_balance,
          up.bonus_wallet,
          up.total_referrals,
          up.referral_code,
          up.fast_track_eligible,
          up.fast_track_activated
        FROM auth.users u
        LEFT JOIN public.users_profiles up ON u.id = up.user_id
        WHERE u.email = $1
      `,a=await this.pool.query(r,[e]);if(0===a.rows.length)return null;let t=a.rows[0];return{id:t.id,display_name:t.display_name,email:t.email,phone_number:t.phone_number,password_hash:t.password_hash,email_verified:t.email_verified,created_at:t.created_at,phone:t.phone,wallet_balance:t.wallet_balance||0,bonus_wallet:t.bonus_wallet||0,total_referrals:t.total_referrals||0,referral_code:t.referral_code,fast_track_eligible:t.fast_track_eligible||!1,fast_track_activated:t.fast_track_activated||!1}}catch(e){return console.error("❌ Error finding user by email:",e),null}}async createUser(e){let r=await this.pool.connect();try{await r.query("BEGIN");let a=await l().hash(e.password,12),t=`
        INSERT INTO auth.users (
          display_name,
          email,
          phone_number,
          password_hash,
          email_verified,
          phone_number_verified,
          locale,
          avatar_url
        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
        RETURNING id, display_name, email, phone_number, password_hash, email_verified, created_at
      `,s=[e.display_name,e.email,e.phone_number||null,a,!1,!1,"en",""],i=(await r.query(t,s)).rows[0],n=this.generateReferralCode(),o=`
        INSERT INTO public.users_profiles (
          user_id,
          phone,
          wallet_balance,
          bonus_wallet,
          total_referrals,
          referral_code,
          fast_track_eligible,
          fast_track_activated
        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8)
        RETURNING phone, wallet_balance, bonus_wallet, total_referrals, referral_code, fast_track_eligible, fast_track_activated
      `,u=[i.id,e.phone||null,0,0,0,n,!1,!1],c=(await r.query(o,u)).rows[0];return await r.query("COMMIT"),{id:i.id,display_name:i.display_name,email:i.email,phone_number:i.phone_number,password_hash:i.password_hash,email_verified:i.email_verified,created_at:i.created_at,phone:c.phone,wallet_balance:c.wallet_balance,bonus_wallet:c.bonus_wallet,total_referrals:c.total_referrals,referral_code:c.referral_code,fast_track_eligible:c.fast_track_eligible,fast_track_activated:c.fast_track_activated}}catch(e){throw await r.query("ROLLBACK"),console.error("❌ Error creating user:",e),e}finally{r.release()}}async verifyPassword(e,r){try{let a=await this.findUserByEmail(e);if(!a||!a.password_hash)return!1;return await l().compare(r,a.password_hash)}catch(e){return console.error("❌ Error verifying password:",e),!1}}async updateUserProfile(e,r){let a=await this.pool.connect();try{await a.query("BEGIN");let t={},s={};if(Object.entries(r).forEach(([e,r])=>{["display_name","email","phone_number","password_hash","email_verified"].includes(e)?t[e]=r:["phone","wallet_balance","bonus_wallet","total_referrals","referral_code","fast_track_eligible","fast_track_activated"].includes(e)&&(s[e]=r)}),Object.keys(t).length>0){let r=Object.keys(t).map((e,r)=>`${e} = $${r+1}`).join(", "),s=Object.values(t);s.push(e);let l=`UPDATE auth.users SET ${r} WHERE id = $${s.length}`;await a.query(l,s)}if(Object.keys(s).length>0){let r=Object.keys(s).map((e,r)=>`${e} = $${r+1}`).join(", "),t=Object.values(s);t.push(e);let l=`UPDATE public.users_profiles SET ${r} WHERE user_id = $${t.length}`;await a.query(l,t)}return await a.query("COMMIT"),!0}catch(e){return await a.query("ROLLBACK"),console.error("❌ Error updating user profile:",e),!1}finally{a.release()}}generateReferralCode(){return Math.random().toString(36).substring(2,8).toUpperCase()}async getClient(){return await this.pool.connect()}async close(){await this.pool.end()}}let n=new i},7725:(e,r,a)=>{a.d(r,{H:()=>l});var t=a(8078);class s{async findUserByEmail(e){try{console.log("\uD83D\uDD0D Finding user by email:",e);let r=await t.t.findUserByEmail(e);if(r)return{id:r.id,display_name:r.display_name,email:r.email,phone:r.phone,phone_number:r.phone_number,passwordHash:r.password_hash,referralCode:r.referral_code,emailVerified:r.email_verified,createdAt:r.created_at,walletBalance:r.wallet_balance,bonusWallet:r.bonus_wallet,totalReferrals:r.total_referrals,fastTrackEligible:r.fast_track_eligible,fastTrackActivated:r.fast_track_activated};return null}catch(e){return console.error("❌ Error finding user by email:",e),null}}async createUser(e){try{console.log("\uD83D\uDC64 Creating new user:",e.email);let r=await t.t.createUser(e);if(r)return{id:r.id,display_name:r.display_name,email:r.email,phone:r.phone,phone_number:r.phone_number,passwordHash:r.password_hash,referralCode:r.referral_code,emailVerified:r.email_verified,createdAt:r.created_at,walletBalance:r.wallet_balance,bonusWallet:r.bonus_wallet,totalReferrals:r.total_referrals,fastTrackEligible:r.fast_track_eligible,fastTrackActivated:r.fast_track_activated};return null}catch(e){throw console.error("❌ Error creating user:",e),e}}async updateUserProfile(e,r){try{console.log("\uD83D\uDCDD Updating user profile:",e);let a={};return r.display_name&&(a.display_name=r.display_name),r.email&&(a.email=r.email),r.phone&&(a.phone=r.phone),r.phone_number&&(a.phone_number=r.phone_number),r.passwordHash&&(a.password_hash=r.passwordHash),r.referralCode&&(a.referral_code=r.referralCode),void 0!==r.emailVerified&&(a.email_verified=r.emailVerified),void 0!==r.walletBalance&&(a.wallet_balance=r.walletBalance),void 0!==r.bonusWallet&&(a.bonus_wallet=r.bonusWallet),void 0!==r.totalReferrals&&(a.total_referrals=r.totalReferrals),void 0!==r.fastTrackEligible&&(a.fast_track_eligible=r.fastTrackEligible),void 0!==r.fastTrackActivated&&(a.fast_track_activated=r.fastTrackActivated),await t.t.updateUserProfile(e,a)}catch(e){return console.error("❌ Error updating user profile:",e),!1}}async verifyPassword(e,r){try{return console.log("\uD83D\uDD10 Verifying password for:",e),await t.t.verifyPassword(e,r)}catch(e){return console.error("❌ Error verifying password:",e),!1}}}let l=new s},7153:(e,r)=>{var a;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return a}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(a||(a={}))},1802:(e,r,a)=>{e.exports=a(145)}};var r=require("../../../webpack-api-runtime.js");r.C(e);var a=r(r.s=6154);module.exports=a})();