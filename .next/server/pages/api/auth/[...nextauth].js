"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/auth/[...nextauth]";
exports.ids = ["pages/api/auth/[...nextauth]"];
exports.modules = {

/***/ "@nhost/nhost-js":
/*!**********************************!*\
  !*** external "@nhost/nhost-js" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("@nhost/nhost-js");

/***/ }),

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "next-auth":
/*!****************************!*\
  !*** external "next-auth" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("next-auth");

/***/ }),

/***/ "next-auth/providers/credentials":
/*!**************************************************!*\
  !*** external "next-auth/providers/credentials" ***!
  \**************************************************/
/***/ ((module) => {

module.exports = require("next-auth/providers/credentials");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "pg":
/*!*********************!*\
  !*** external "pg" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("pg");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cauth%5C%5B...nextauth%5D.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cauth%5C%5B...nextauth%5D.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_auth_nextauth_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\auth\\[...nextauth].ts */ \"(api)/./pages/api/auth/[...nextauth].ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_auth_nextauth_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_auth_nextauth_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/auth/[...nextauth]\",\n        pathname: \"/api/auth/[...nextauth]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_auth_nextauth_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmF1dGglMkYlNUIuLi5uZXh0YXV0aCU1RCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDYXV0aCU1QyU1Qi4uLm5leHRhdXRoJTVELnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ2lFO0FBQ2pFO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx3REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsd0RBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvdmVudi1uZXh0anMvPzJmMTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxhdXRoXFxcXFsuLi5uZXh0YXV0aF0udHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9hdXRoL1suLi5uZXh0YXV0aF1cIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9hdXRoL1suLi5uZXh0YXV0aF1cIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cauth%5C%5B...nextauth%5D.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./lib/direct-db.ts":
/*!**************************!*\
  !*** ./lib/direct-db.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   directDb: () => (/* binding */ directDb)\n/* harmony export */ });\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pg */ \"pg\");\n/* harmony import */ var pg__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pg__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_1__);\n// Direct PostgreSQL database connection for authentication\n// This bypasses Nhost GraphQL and connects directly to the database\n\n\nclass DirectDatabaseConnection {\n    constructor(){\n        this.pool = new pg__WEBPACK_IMPORTED_MODULE_0__.Pool({\n            host: \"sbpnfqrsnvtyvkgldcco.db.eu-central-1.nhost.run\",\n            port: parseInt(\"5432\" || 0),\n            database: \"sbpnfqrsnvtyvkgldcco\",\n            user: \"postgres\",\n            password: \"Provenvalueenterprise@123!\",\n            ssl: \"true\" === \"true\",\n            max: 10,\n            min: 2,\n            idleTimeoutMillis: 60000,\n            connectionTimeoutMillis: 10000,\n            query_timeout: 30000,\n            allowExitOnIdle: true\n        });\n        // Test connection on initialization\n        this.testConnection();\n    }\n    async testConnection() {\n        try {\n            const client = await this.pool.connect();\n            console.log(\"✅ Direct PostgreSQL connection established\");\n            client.release();\n        } catch (error) {\n            console.error(\"❌ Direct PostgreSQL connection failed:\", error);\n        }\n    }\n    // Find user by email with profile data\n    async findUserByEmail(email) {\n        try {\n            const query = `\r\n        SELECT\r\n          u.id,\r\n          u.display_name,\r\n          u.email,\r\n          u.phone_number,\r\n          u.password_hash,\r\n          u.email_verified,\r\n          u.created_at,\r\n          up.phone,\r\n          up.wallet_balance,\r\n          up.bonus_wallet,\r\n          up.total_referrals,\r\n          up.referral_code,\r\n          up.fast_track_eligible,\r\n          up.fast_track_activated\r\n        FROM auth.users u\r\n        LEFT JOIN public.users_profiles up ON u.id = up.user_id\r\n        WHERE u.email = $1\r\n      `;\n            const result = await this.pool.query(query, [\n                email\n            ]);\n            if (result.rows.length === 0) {\n                return null;\n            }\n            const row = result.rows[0];\n            return {\n                id: row.id,\n                display_name: row.display_name,\n                email: row.email,\n                phone_number: row.phone_number,\n                password_hash: row.password_hash,\n                email_verified: row.email_verified,\n                created_at: row.created_at,\n                phone: row.phone,\n                wallet_balance: row.wallet_balance || 0,\n                bonus_wallet: row.bonus_wallet || 0,\n                total_referrals: row.total_referrals || 0,\n                referral_code: row.referral_code,\n                fast_track_eligible: row.fast_track_eligible || false,\n                fast_track_activated: row.fast_track_activated || false\n            };\n        } catch (error) {\n            console.error(\"Error finding user by email:\", error);\n            return null;\n        }\n    }\n    // Find user by phone number with profile data\n    async findUserByPhone(phone) {\n        try {\n            const query = `\r\n        SELECT\r\n          u.id,\r\n          u.display_name,\r\n          u.email,\r\n          u.phone_number,\r\n          u.password_hash,\r\n          u.email_verified,\r\n          u.created_at,\r\n          up.phone,\r\n          up.wallet_balance,\r\n          up.bonus_wallet,\r\n          up.total_referrals,\r\n          up.referral_code,\r\n          up.fast_track_eligible,\r\n          up.fast_track_activated\r\n        FROM auth.users u\r\n        LEFT JOIN public.users_profiles up ON u.id = up.user_id\r\n        WHERE u.phone_number = $1 OR up.phone = $1\r\n      `;\n            const result = await this.pool.query(query, [\n                phone\n            ]);\n            if (result.rows.length === 0) {\n                return null;\n            }\n            const row = result.rows[0];\n            return {\n                id: row.id,\n                display_name: row.display_name,\n                email: row.email,\n                phone_number: row.phone_number,\n                password_hash: row.password_hash,\n                email_verified: row.email_verified,\n                created_at: row.created_at,\n                phone: row.phone,\n                wallet_balance: row.wallet_balance || 0,\n                bonus_wallet: row.bonus_wallet || 0,\n                total_referrals: row.total_referrals || 0,\n                referral_code: row.referral_code,\n                fast_track_eligible: row.fast_track_eligible || false,\n                fast_track_activated: row.fast_track_activated || false\n            };\n        } catch (error) {\n            console.error(\"❌ Error finding user by email:\", error);\n            return null;\n        }\n    }\n    // Create new user\n    async createUser(userData) {\n        const client = await this.pool.connect();\n        try {\n            await client.query(\"BEGIN\");\n            // Hash the password\n            const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().hash(userData.password, 12);\n            // Insert into users table first\n            const userQuery = `\r\n        INSERT INTO auth.users (\r\n          display_name,\r\n          email,\r\n          phone_number,\r\n          password_hash,\r\n          email_verified,\r\n          phone_number_verified,\r\n          locale,\r\n          avatar_url\r\n        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8)\r\n        RETURNING id, display_name, email, phone_number, password_hash, email_verified, created_at\r\n      `;\n            const userValues = [\n                userData.display_name,\n                userData.email || null,\n                userData.phone_number || null,\n                hashedPassword,\n                false,\n                false,\n                \"en\",\n                \"\"\n            ];\n            const userResult = await client.query(userQuery, userValues);\n            const newUser = userResult.rows[0];\n            // Generate referral code\n            const referralCode = this.generateReferralCode();\n            // Insert into users_profiles table\n            const profileQuery = `\r\n        INSERT INTO public.users_profiles (\r\n          user_id,\r\n          email,\r\n          first_name,\r\n          last_name,\r\n          full_name,\r\n          phone,\r\n          wallet_balance,\r\n          bonus_wallet,\r\n          total_referrals,\r\n          referral_code,\r\n          fast_track_eligible,\r\n          fast_track_activated\r\n        ) VALUES ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12)\r\n        RETURNING *\r\n      `;\n            // Split display name into first and last name\n            const fullName = userData.display_name || \"User\";\n            const nameParts = fullName.split(\" \");\n            const firstName = nameParts[0] || \"User\";\n            const lastName = nameParts.slice(1).join(\" \") || \"\";\n            const profileValues = [\n                newUser.id,\n                userData.email,\n                firstName,\n                lastName,\n                fullName,\n                userData.phone || null,\n                0,\n                0,\n                0,\n                referralCode,\n                false,\n                false\n            ];\n            const profileResult = await client.query(profileQuery, profileValues);\n            const newProfile = profileResult.rows[0];\n            await client.query(\"COMMIT\");\n            // Return combined user data\n            return {\n                id: newUser.id,\n                display_name: newUser.display_name,\n                email: newUser.email,\n                phone_number: newUser.phone_number,\n                password_hash: newUser.password_hash,\n                email_verified: newUser.email_verified,\n                created_at: newUser.created_at,\n                phone: newProfile.phone,\n                wallet_balance: newProfile.wallet_balance,\n                bonus_wallet: newProfile.bonus_wallet,\n                total_referrals: newProfile.total_referrals,\n                referral_code: newProfile.referral_code,\n                fast_track_eligible: newProfile.fast_track_eligible,\n                fast_track_activated: newProfile.fast_track_activated\n            };\n        } catch (error) {\n            await client.query(\"ROLLBACK\");\n            console.error(\"❌ Error creating user:\", error);\n            // Re-throw the error to preserve constraint violation details\n            throw error;\n        } finally{\n            client.release();\n        }\n    }\n    // Verify user password\n    async verifyPassword(email, password) {\n        try {\n            const user = await this.findUserByEmail(email);\n            if (!user || !user.password_hash) {\n                return false;\n            }\n            return await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().compare(password, user.password_hash);\n        } catch (error) {\n            console.error(\"❌ Error verifying password:\", error);\n            return false;\n        }\n    }\n    // Verify user password by phone\n    async verifyPasswordByPhone(phone, password) {\n        try {\n            const user = await this.findUserByPhone(phone);\n            if (!user || !user.password_hash) {\n                return false;\n            }\n            return await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().compare(password, user.password_hash);\n        } catch (error) {\n            console.error(\"❌ Error verifying password by phone:\", error);\n            return false;\n        }\n    }\n    // Update user profile\n    async updateUserProfile(userId, updates) {\n        const client = await this.pool.connect();\n        try {\n            await client.query(\"BEGIN\");\n            // Separate updates for users table and users_profiles table\n            const userUpdates = {};\n            const profileUpdates = {};\n            Object.entries(updates).forEach(([key, value])=>{\n                if ([\n                    \"display_name\",\n                    \"email\",\n                    \"phone_number\",\n                    \"password_hash\",\n                    \"email_verified\"\n                ].includes(key)) {\n                    userUpdates[key] = value;\n                } else if ([\n                    \"phone\",\n                    \"wallet_balance\",\n                    \"bonus_wallet\",\n                    \"total_referrals\",\n                    \"referral_code\",\n                    \"fast_track_eligible\",\n                    \"fast_track_activated\"\n                ].includes(key)) {\n                    profileUpdates[key] = value;\n                }\n            });\n            // Update users table\n            if (Object.keys(userUpdates).length > 0) {\n                const userFields = Object.keys(userUpdates).map((key, index)=>`${key} = $${index + 1}`).join(\", \");\n                const userValues = Object.values(userUpdates);\n                userValues.push(userId);\n                const userQuery = `UPDATE auth.users SET ${userFields} WHERE id = $${userValues.length}`;\n                await client.query(userQuery, userValues);\n            }\n            // Update users_profiles table\n            if (Object.keys(profileUpdates).length > 0) {\n                const profileFields = Object.keys(profileUpdates).map((key, index)=>`${key} = $${index + 1}`).join(\", \");\n                const profileValues = Object.values(profileUpdates);\n                profileValues.push(userId);\n                const profileQuery = `UPDATE public.users_profiles SET ${profileFields} WHERE user_id = $${profileValues.length}`;\n                await client.query(profileQuery, profileValues);\n            }\n            await client.query(\"COMMIT\");\n            return true;\n        } catch (error) {\n            await client.query(\"ROLLBACK\");\n            console.error(\"❌ Error updating user profile:\", error);\n            return false;\n        } finally{\n            client.release();\n        }\n    }\n    // Generate referral code\n    generateReferralCode() {\n        return Math.random().toString(36).substring(2, 8).toUpperCase();\n    }\n    // Get a database client connection (for advanced queries)\n    async getClient() {\n        return await this.pool.connect();\n    }\n    // Close connection pool\n    async close() {\n        await this.pool.end();\n    }\n}\n// Export singleton instance\nconst directDb = new DirectDatabaseConnection();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (directDb);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/direct-db.ts\n");

/***/ }),

/***/ "(api)/./lib/nhost.ts":
/*!**********************!*\
  !*** ./lib/nhost.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dbConfig: () => (/* binding */ dbConfig),\n/* harmony export */   nhost: () => (/* binding */ nhost),\n/* harmony export */   testDirectDatabaseConnection: () => (/* binding */ testDirectDatabaseConnection),\n/* harmony export */   testNhostConnection: () => (/* binding */ testNhostConnection)\n/* harmony export */ });\n/* harmony import */ var _nhost_nhost_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @nhost/nhost-js */ \"@nhost/nhost-js\");\n/* harmony import */ var _nhost_nhost_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_nhost_nhost_js__WEBPACK_IMPORTED_MODULE_0__);\n\nconst nhost = new _nhost_nhost_js__WEBPACK_IMPORTED_MODULE_0__.NhostClient({\n    subdomain: \"sbpnfqrsnvtyvkgldcco\" || 0,\n    region: \"eu-central-1\" || 0\n});\n// Direct PostgreSQL connection configuration\nconst dbConfig = {\n    host: \"sbpnfqrsnvtyvkgldcco.db.eu-central-1.nhost.run\" || 0,\n    port: parseInt(\"5432\" || 0),\n    database: \"sbpnfqrsnvtyvkgldcco\" || 0,\n    user: \"postgres\" || 0,\n    password: \"Provenvalueenterprise@123!\" || 0,\n    ssl: \"true\" !== \"false\"\n};\n// Connection test function\nconst testNhostConnection = async ()=>{\n    try {\n        console.log(\"\\uD83D\\uDD0D Testing Nhost connection...\");\n        console.log(\"\\uD83D\\uDCCD Nhost Config:\", {\n            subdomain: \"sbpnfqrsnvtyvkgldcco\",\n            region: \"eu-central-1\",\n            useNhost: \"true\"\n        });\n        // Test basic connectivity\n        const isAuthenticated = nhost.auth.isAuthenticated();\n        console.log(\"\\uD83D\\uDD10 Current auth status:\", isAuthenticated);\n        // Test GraphQL endpoint\n        const response = await fetch(`https://${\"sbpnfqrsnvtyvkgldcco\"}.nhost.run/v1/graphql`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                query: `\r\n          query {\r\n            __typename\r\n          }\r\n        `\n            })\n        });\n        if (response.ok) {\n            console.log(\"✅ Nhost GraphQL endpoint is reachable\");\n            return {\n                success: true,\n                message: \"Nhost connection successful\"\n            };\n        } else {\n            console.error(\"❌ Nhost GraphQL endpoint error:\", response.status, response.statusText);\n            return {\n                success: false,\n                message: `HTTP ${response.status}: ${response.statusText}`\n            };\n        }\n    } catch (error) {\n        console.error(\"❌ Nhost connection test failed:\", error);\n        return {\n            success: false,\n            message: error instanceof Error ? error.message : \"Unknown error\"\n        };\n    }\n};\n// Direct PostgreSQL connection test\nconst testDirectDatabaseConnection = async ()=>{\n    try {\n        console.log(\"\\uD83D\\uDD0D Testing direct PostgreSQL connection...\");\n        // For now, we'll test the connection string format\n        const connectionString = `postgres://${dbConfig.user}:${dbConfig.password}@${dbConfig.host}:${dbConfig.port}/${dbConfig.database}`;\n        console.log(\"\\uD83D\\uDCCB Connection Details:\");\n        console.log(`   Host: ${dbConfig.host}`);\n        console.log(`   Port: ${dbConfig.port}`);\n        console.log(`   Database: ${dbConfig.database}`);\n        console.log(`   User: ${dbConfig.user}`);\n        console.log(`   SSL: ${dbConfig.ssl}`);\n        console.log(`   Connection String: ${connectionString.replace(/:[^:]*@/, \":***@\")}`); // Hide password\n        // Test if we can reach the database host\n        const testResponse = await fetch(`https://dns.google/resolve?name=${dbConfig.host}`, {\n            method: \"GET\"\n        });\n        if (testResponse.ok) {\n            const dnsData = await testResponse.json();\n            if (dnsData.Answer && dnsData.Answer.length > 0) {\n                console.log(\"✅ Database host is reachable via DNS\");\n                return {\n                    success: true,\n                    message: \"Database host is reachable\",\n                    connectionString: connectionString,\n                    dnsResolved: true\n                };\n            }\n        }\n        console.log(\"⚠️ Cannot verify database host reachability\");\n        return {\n            success: false,\n            message: \"Cannot verify database host reachability\",\n            connectionString: connectionString,\n            dnsResolved: false\n        };\n    } catch (error) {\n        console.error(\"❌ Direct database connection test failed:\", error);\n        return {\n            success: false,\n            message: error instanceof Error ? error.message : \"Unknown error\",\n            connectionString: null,\n            dnsResolved: false\n        };\n    }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQyxDQUFDLHNCQUFzQixFQUFFcUIsaUJBQWlCQyxPQUFPLENBQUMsV0FBVyxTQUFTLENBQUMsR0FBRyxnQkFBZ0I7UUFFdEcseUNBQXlDO1FBQ3pDLE1BQU1DLGVBQWUsTUFBTWpCLE1BQU0sQ0FBQyxnQ0FBZ0MsRUFBRXRCLFNBQVNDLElBQUksQ0FBQyxDQUFDLEVBQUU7WUFDbkZzQixRQUFRO1FBQ1Y7UUFFQSxJQUFJZ0IsYUFBYVYsRUFBRSxFQUFFO1lBQ25CLE1BQU1XLFVBQVUsTUFBTUQsYUFBYUUsSUFBSTtZQUN2QyxJQUFJRCxRQUFRRSxNQUFNLElBQUlGLFFBQVFFLE1BQU0sQ0FBQ0MsTUFBTSxHQUFHLEdBQUc7Z0JBQy9DNUIsUUFBUUMsR0FBRyxDQUFDO2dCQUNaLE9BQU87b0JBQ0xjLFNBQVM7b0JBQ1RDLFNBQVM7b0JBQ1RNLGtCQUFrQkE7b0JBQ2xCTyxhQUFhO2dCQUNmO1lBQ0Y7UUFDRjtRQUVBN0IsUUFBUUMsR0FBRyxDQUFDO1FBQ1osT0FBTztZQUNMYyxTQUFTO1lBQ1RDLFNBQVM7WUFDVE0sa0JBQWtCQTtZQUNsQk8sYUFBYTtRQUNmO0lBRUYsRUFBRSxPQUFPWixPQUFPO1FBQ2RqQixRQUFRaUIsS0FBSyxDQUFDLDZDQUE2Q0E7UUFDM0QsT0FBTztZQUNMRixTQUFTO1lBQ1RDLFNBQVNDLGlCQUFpQkcsUUFBUUgsTUFBTUQsT0FBTyxHQUFHO1lBQ2xETSxrQkFBa0I7WUFDbEJPLGFBQWE7UUFDZjtJQUNGO0FBQ0YsRUFBRTtBQUVjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcHJvdmVudi1uZXh0anMvLi9saWIvbmhvc3QudHM/NGI4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOaG9zdENsaWVudCB9IGZyb20gJ0BuaG9zdC9uaG9zdC1qcydcclxuXHJcbmNvbnN0IG5ob3N0ID0gbmV3IE5ob3N0Q2xpZW50KHtcclxuICBzdWJkb21haW46IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX05IT1NUX1NVQkRPTUFJTiB8fCAnc2JwbmZxcnNudnR5dmtnbGRjY28nLFxyXG4gIHJlZ2lvbjogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfTkhPU1RfUkVHSU9OIHx8ICdldS1jZW50cmFsLTEnXHJcbn0pXHJcblxyXG4vLyBEaXJlY3QgUG9zdGdyZVNRTCBjb25uZWN0aW9uIGNvbmZpZ3VyYXRpb25cclxuZXhwb3J0IGNvbnN0IGRiQ29uZmlnID0ge1xyXG4gIGhvc3Q6IHByb2Nlc3MuZW52LkRCX0hPU1QgfHwgJ3NicG5mcXJzbnZ0eXZrZ2xkY2NvLmRiLmV1LWNlbnRyYWwtMS5uaG9zdC5ydW4nLFxyXG4gIHBvcnQ6IHBhcnNlSW50KHByb2Nlc3MuZW52LkRCX1BPUlQgfHwgJzU0MzInKSxcclxuICBkYXRhYmFzZTogcHJvY2Vzcy5lbnYuREJfTkFNRSB8fCAnc2JwbmZxcnNudnR5dmtnbGRjY28nLFxyXG4gIHVzZXI6IHByb2Nlc3MuZW52LkRCX1VTRVIgfHwgJ3Bvc3RncmVzJyxcclxuICBwYXNzd29yZDogcHJvY2Vzcy5lbnYuREJfUEFTU1dPUkQgfHwgJycsXHJcbiAgc3NsOiBwcm9jZXNzLmVudi5EQl9TU0wgIT09ICdmYWxzZSdcclxufTtcclxuXHJcbi8vIENvbm5lY3Rpb24gdGVzdCBmdW5jdGlvblxyXG5leHBvcnQgY29uc3QgdGVzdE5ob3N0Q29ubmVjdGlvbiA9IGFzeW5jICgpID0+IHtcclxuICB0cnkge1xyXG4gICAgY29uc29sZS5sb2coJ/CflI0gVGVzdGluZyBOaG9zdCBjb25uZWN0aW9uLi4uJyk7XHJcbiAgICBjb25zb2xlLmxvZygn8J+TjSBOaG9zdCBDb25maWc6Jywge1xyXG4gICAgICBzdWJkb21haW46IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX05IT1NUX1NVQkRPTUFJTixcclxuICAgICAgcmVnaW9uOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19OSE9TVF9SRUdJT04sXHJcbiAgICAgIHVzZU5ob3N0OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19VU0VfTkhPU1RcclxuICAgIH0pO1xyXG5cclxuICAgIC8vIFRlc3QgYmFzaWMgY29ubmVjdGl2aXR5XHJcbiAgICBjb25zdCBpc0F1dGhlbnRpY2F0ZWQgPSBuaG9zdC5hdXRoLmlzQXV0aGVudGljYXRlZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ/CflJAgQ3VycmVudCBhdXRoIHN0YXR1czonLCBpc0F1dGhlbnRpY2F0ZWQpO1xyXG5cclxuICAgIC8vIFRlc3QgR3JhcGhRTCBlbmRwb2ludFxyXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly8ke3Byb2Nlc3MuZW52Lk5FWFRfUFVCTElDX05IT1NUX1NVQkRPTUFJTn0ubmhvc3QucnVuL3YxL2dyYXBocWxgLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xyXG4gICAgICAgIHF1ZXJ5OiBgXHJcbiAgICAgICAgICBxdWVyeSB7XHJcbiAgICAgICAgICAgIF9fdHlwZW5hbWVcclxuICAgICAgICAgIH1cclxuICAgICAgICBgXHJcbiAgICAgIH0pXHJcbiAgICB9KTtcclxuXHJcbiAgICBpZiAocmVzcG9uc2Uub2spIHtcclxuICAgICAgY29uc29sZS5sb2coJ+KchSBOaG9zdCBHcmFwaFFMIGVuZHBvaW50IGlzIHJlYWNoYWJsZScpO1xyXG4gICAgICByZXR1cm4geyBzdWNjZXNzOiB0cnVlLCBtZXNzYWdlOiAnTmhvc3QgY29ubmVjdGlvbiBzdWNjZXNzZnVsJyB9O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgY29uc29sZS5lcnJvcign4p2MIE5ob3N0IEdyYXBoUUwgZW5kcG9pbnQgZXJyb3I6JywgcmVzcG9uc2Uuc3RhdHVzLCByZXNwb25zZS5zdGF0dXNUZXh0KTtcclxuICAgICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IGBIVFRQICR7cmVzcG9uc2Uuc3RhdHVzfTogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWAgfTtcclxuICAgIH1cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcign4p2MIE5ob3N0IGNvbm5lY3Rpb24gdGVzdCBmYWlsZWQ6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHsgc3VjY2VzczogZmFsc2UsIG1lc3NhZ2U6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InIH07XHJcbiAgfVxyXG59O1xyXG5cclxuLy8gRGlyZWN0IFBvc3RncmVTUUwgY29ubmVjdGlvbiB0ZXN0XHJcbmV4cG9ydCBjb25zdCB0ZXN0RGlyZWN0RGF0YWJhc2VDb25uZWN0aW9uID0gYXN5bmMgKCkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zb2xlLmxvZygn8J+UjSBUZXN0aW5nIGRpcmVjdCBQb3N0Z3JlU1FMIGNvbm5lY3Rpb24uLi4nKTtcclxuXHJcbiAgICAvLyBGb3Igbm93LCB3ZSdsbCB0ZXN0IHRoZSBjb25uZWN0aW9uIHN0cmluZyBmb3JtYXRcclxuICAgIGNvbnN0IGNvbm5lY3Rpb25TdHJpbmcgPSBgcG9zdGdyZXM6Ly8ke2RiQ29uZmlnLnVzZXJ9OiR7ZGJDb25maWcucGFzc3dvcmR9QCR7ZGJDb25maWcuaG9zdH06JHtkYkNvbmZpZy5wb3J0fS8ke2RiQ29uZmlnLmRhdGFiYXNlfWA7XHJcblxyXG4gICAgY29uc29sZS5sb2coJ/Cfk4sgQ29ubmVjdGlvbiBEZXRhaWxzOicpO1xyXG4gICAgY29uc29sZS5sb2coYCAgIEhvc3Q6ICR7ZGJDb25maWcuaG9zdH1gKTtcclxuICAgIGNvbnNvbGUubG9nKGAgICBQb3J0OiAke2RiQ29uZmlnLnBvcnR9YCk7XHJcbiAgICBjb25zb2xlLmxvZyhgICAgRGF0YWJhc2U6ICR7ZGJDb25maWcuZGF0YWJhc2V9YCk7XHJcbiAgICBjb25zb2xlLmxvZyhgICAgVXNlcjogJHtkYkNvbmZpZy51c2VyfWApO1xyXG4gICAgY29uc29sZS5sb2coYCAgIFNTTDogJHtkYkNvbmZpZy5zc2x9YCk7XHJcbiAgICBjb25zb2xlLmxvZyhgICAgQ29ubmVjdGlvbiBTdHJpbmc6ICR7Y29ubmVjdGlvblN0cmluZy5yZXBsYWNlKC86W146XSpALywgJzoqKipAJyl9YCk7IC8vIEhpZGUgcGFzc3dvcmRcclxuXHJcbiAgICAvLyBUZXN0IGlmIHdlIGNhbiByZWFjaCB0aGUgZGF0YWJhc2UgaG9zdFxyXG4gICAgY29uc3QgdGVzdFJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vZG5zLmdvb2dsZS9yZXNvbHZlP25hbWU9JHtkYkNvbmZpZy5ob3N0fWAsIHtcclxuICAgICAgbWV0aG9kOiAnR0VUJ1xyXG4gICAgfSk7XHJcblxyXG4gICAgaWYgKHRlc3RSZXNwb25zZS5vaykge1xyXG4gICAgICBjb25zdCBkbnNEYXRhID0gYXdhaXQgdGVzdFJlc3BvbnNlLmpzb24oKTtcclxuICAgICAgaWYgKGRuc0RhdGEuQW5zd2VyICYmIGRuc0RhdGEuQW5zd2VyLmxlbmd0aCA+IDApIHtcclxuICAgICAgICBjb25zb2xlLmxvZygn4pyFIERhdGFiYXNlIGhvc3QgaXMgcmVhY2hhYmxlIHZpYSBETlMnKTtcclxuICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgICAgIG1lc3NhZ2U6ICdEYXRhYmFzZSBob3N0IGlzIHJlYWNoYWJsZScsXHJcbiAgICAgICAgICBjb25uZWN0aW9uU3RyaW5nOiBjb25uZWN0aW9uU3RyaW5nLFxyXG4gICAgICAgICAgZG5zUmVzb2x2ZWQ6IHRydWVcclxuICAgICAgICB9O1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY29uc29sZS5sb2coJ+KaoO+4jyBDYW5ub3QgdmVyaWZ5IGRhdGFiYXNlIGhvc3QgcmVhY2hhYmlsaXR5Jyk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBzdWNjZXNzOiBmYWxzZSxcclxuICAgICAgbWVzc2FnZTogJ0Nhbm5vdCB2ZXJpZnkgZGF0YWJhc2UgaG9zdCByZWFjaGFiaWxpdHknLFxyXG4gICAgICBjb25uZWN0aW9uU3RyaW5nOiBjb25uZWN0aW9uU3RyaW5nLFxyXG4gICAgICBkbnNSZXNvbHZlZDogZmFsc2VcclxuICAgIH07XHJcblxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCfinYwgRGlyZWN0IGRhdGFiYXNlIGNvbm5lY3Rpb24gdGVzdCBmYWlsZWQ6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc3VjY2VzczogZmFsc2UsXHJcbiAgICAgIG1lc3NhZ2U6IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci5tZXNzYWdlIDogJ1Vua25vd24gZXJyb3InLFxyXG4gICAgICBjb25uZWN0aW9uU3RyaW5nOiBudWxsLFxyXG4gICAgICBkbnNSZXNvbHZlZDogZmFsc2VcclxuICAgIH07XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IHsgbmhvc3QgfSJdLCJuYW1lcyI6WyJOaG9zdENsaWVudCIsIm5ob3N0Iiwic3ViZG9tYWluIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX05IT1NUX1NVQkRPTUFJTiIsInJlZ2lvbiIsIk5FWFRfUFVCTElDX05IT1NUX1JFR0lPTiIsImRiQ29uZmlnIiwiaG9zdCIsIkRCX0hPU1QiLCJwb3J0IiwicGFyc2VJbnQiLCJEQl9QT1JUIiwiZGF0YWJhc2UiLCJEQl9OQU1FIiwidXNlciIsIkRCX1VTRVIiLCJwYXNzd29yZCIsIkRCX1BBU1NXT1JEIiwic3NsIiwiREJfU1NMIiwidGVzdE5ob3N0Q29ubmVjdGlvbiIsImNvbnNvbGUiLCJsb2ciLCJ1c2VOaG9zdCIsIk5FWFRfUFVCTElDX1VTRV9OSE9TVCIsImlzQXV0aGVudGljYXRlZCIsImF1dGgiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicXVlcnkiLCJvayIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwiZXJyb3IiLCJzdGF0dXMiLCJzdGF0dXNUZXh0IiwiRXJyb3IiLCJ0ZXN0RGlyZWN0RGF0YWJhc2VDb25uZWN0aW9uIiwiY29ubmVjdGlvblN0cmluZyIsInJlcGxhY2UiLCJ0ZXN0UmVzcG9uc2UiLCJkbnNEYXRhIiwianNvbiIsIkFuc3dlciIsImxlbmd0aCIsImRuc1Jlc29sdmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/nhost.ts\n");

/***/ }),

/***/ "(api)/./lib/user-store.ts":
/*!***************************!*\
  !*** ./lib/user-store.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   userStore: () => (/* binding */ userStore)\n/* harmony export */ });\n/* harmony import */ var _direct_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./direct-db */ \"(api)/./lib/direct-db.ts\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"bcryptjs\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_1__);\n// Direct database user store for persistent storage\n// Uses direct PostgreSQL connection for user management\n\n\n// Direct database user store\nclass DirectDatabaseUserStore {\n    // Find user by email\n    async findUserByEmail(email) {\n        try {\n            console.log(\"\\uD83D\\uDD0D Finding user by email:\", email);\n            const user = await _direct_db__WEBPACK_IMPORTED_MODULE_0__.directDb.findUserByEmail(email);\n            if (user) {\n                return {\n                    id: user.id,\n                    display_name: user.display_name,\n                    email: user.email,\n                    phone: user.phone,\n                    phone_number: user.phone_number,\n                    passwordHash: user.password_hash,\n                    referralCode: user.referral_code,\n                    emailVerified: user.email_verified,\n                    createdAt: user.created_at,\n                    walletBalance: user.wallet_balance,\n                    bonusWallet: user.bonus_wallet,\n                    totalReferrals: user.total_referrals,\n                    fastTrackEligible: user.fast_track_eligible,\n                    fastTrackActivated: user.fast_track_activated\n                };\n            }\n            return null;\n        } catch (error) {\n            console.error(\"❌ Error finding user by email:\", error);\n            return null;\n        }\n    }\n    // Find user by phone number\n    async findUserByPhone(phone) {\n        try {\n            console.log(\"\\uD83D\\uDD0D Finding user by phone:\", phone);\n            const user = await _direct_db__WEBPACK_IMPORTED_MODULE_0__.directDb.findUserByPhone(phone);\n            if (user) {\n                return {\n                    id: user.id,\n                    display_name: user.display_name,\n                    email: user.email,\n                    phone: user.phone,\n                    phone_number: user.phone_number,\n                    passwordHash: user.password_hash,\n                    referralCode: user.referral_code,\n                    emailVerified: user.email_verified,\n                    createdAt: user.created_at,\n                    walletBalance: user.wallet_balance,\n                    bonusWallet: user.bonus_wallet,\n                    totalReferrals: user.total_referrals,\n                    fastTrackEligible: user.fast_track_eligible,\n                    fastTrackActivated: user.fast_track_activated\n                };\n            }\n            return null;\n        } catch (error) {\n            console.error(\"❌ Error finding user by phone:\", error);\n            return null;\n        }\n    }\n    // Create new user\n    async createUser(userData) {\n        try {\n            console.log(\"\\uD83D\\uDC64 Creating new user:\", userData.email);\n            const user = await _direct_db__WEBPACK_IMPORTED_MODULE_0__.directDb.createUser(userData);\n            if (user) {\n                return {\n                    id: user.id,\n                    display_name: user.display_name,\n                    email: user.email,\n                    phone: user.phone,\n                    phone_number: user.phone_number,\n                    passwordHash: user.password_hash,\n                    referralCode: user.referral_code,\n                    emailVerified: user.email_verified,\n                    createdAt: user.created_at,\n                    walletBalance: user.wallet_balance,\n                    bonusWallet: user.bonus_wallet,\n                    totalReferrals: user.total_referrals,\n                    fastTrackEligible: user.fast_track_eligible,\n                    fastTrackActivated: user.fast_track_activated\n                };\n            }\n            return null;\n        } catch (error) {\n            console.error(\"❌ Error creating user:\", error);\n            // Re-throw the error to preserve constraint violation details\n            throw error;\n        }\n    }\n    // Update user profile\n    async updateUserProfile(userId, updates) {\n        try {\n            console.log(\"\\uD83D\\uDCDD Updating user profile:\", userId);\n            // Convert camelCase to snake_case for database\n            const dbUpdates = {};\n            if (updates.display_name) dbUpdates.display_name = updates.display_name;\n            if (updates.email) dbUpdates.email = updates.email;\n            if (updates.phone) dbUpdates.phone = updates.phone;\n            if (updates.phone_number) dbUpdates.phone_number = updates.phone_number;\n            if (updates.passwordHash) dbUpdates.password_hash = updates.passwordHash;\n            if (updates.referralCode) dbUpdates.referral_code = updates.referralCode;\n            if (updates.emailVerified !== undefined) dbUpdates.email_verified = updates.emailVerified;\n            if (updates.walletBalance !== undefined) dbUpdates.wallet_balance = updates.walletBalance;\n            if (updates.bonusWallet !== undefined) dbUpdates.bonus_wallet = updates.bonusWallet;\n            if (updates.totalReferrals !== undefined) dbUpdates.total_referrals = updates.totalReferrals;\n            if (updates.fastTrackEligible !== undefined) dbUpdates.fast_track_eligible = updates.fastTrackEligible;\n            if (updates.fastTrackActivated !== undefined) dbUpdates.fast_track_activated = updates.fastTrackActivated;\n            return await _direct_db__WEBPACK_IMPORTED_MODULE_0__.directDb.updateUserProfile(userId, dbUpdates);\n        } catch (error) {\n            console.error(\"❌ Error updating user profile:\", error);\n            return false;\n        }\n    }\n    // Verify user password\n    async verifyPassword(email, password) {\n        try {\n            console.log(\"\\uD83D\\uDD10 Verifying password for:\", email);\n            return await _direct_db__WEBPACK_IMPORTED_MODULE_0__.directDb.verifyPassword(email, password);\n        } catch (error) {\n            console.error(\"❌ Error verifying password:\", error);\n            return false;\n        }\n    }\n    // Verify user password by phone\n    async verifyPasswordByPhone(phone, password) {\n        try {\n            console.log(\"\\uD83D\\uDD10 Verifying password for phone:\", phone);\n            return await _direct_db__WEBPACK_IMPORTED_MODULE_0__.directDb.verifyPasswordByPhone(phone, password);\n        } catch (error) {\n            console.error(\"❌ Error verifying password by phone:\", error);\n            return false;\n        }\n    }\n    // Find user by email or phone\n    async findUserByEmailOrPhone(identifier) {\n        try {\n            console.log(\"\\uD83D\\uDD0D Finding user by email or phone:\", identifier);\n            // Check if identifier looks like an email (contains @)\n            if (identifier.includes(\"@\")) {\n                return await this.findUserByEmail(identifier);\n            } else {\n                return await this.findUserByPhone(identifier);\n            }\n        } catch (error) {\n            console.error(\"❌ Error finding user by email or phone:\", error);\n            return null;\n        }\n    }\n    // Verify password for email or phone login\n    async verifyPasswordByEmailOrPhone(identifier, password) {\n        try {\n            console.log(\"\\uD83D\\uDD10 Verifying password for identifier:\", identifier);\n            // Check if identifier looks like an email (contains @)\n            if (identifier.includes(\"@\")) {\n                return await this.verifyPassword(identifier, password);\n            } else {\n                return await this.verifyPasswordByPhone(identifier, password);\n            }\n        } catch (error) {\n            console.error(\"❌ Error verifying password by identifier:\", error);\n            return false;\n        }\n    }\n    // Update user password (convenience method for password reset)\n    async updateUserPassword(userId, newPassword) {\n        try {\n            console.log(\"\\uD83D\\uDD10 Updating password for user:\", userId);\n            const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_1___default().hash(newPassword, 12);\n            return await this.updateUserProfile(userId, {\n                passwordHash: hashedPassword\n            });\n        } catch (error) {\n            console.error(\"❌ Error updating user password:\", error);\n            return false;\n        }\n    }\n}\n// Export singleton instance\nconst userStore = new DirectDatabaseUserStore();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (userStore);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./lib/user-store.ts\n");

/***/ }),

/***/ "(api)/./pages/api/auth/[...nextauth].ts":
/*!*****************************************!*\
  !*** ./pages/api/auth/[...nextauth].ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   authOptions: () => (/* binding */ authOptions),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next-auth */ \"next-auth\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/providers/credentials */ \"next-auth/providers/credentials\");\n/* harmony import */ var next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_nhost__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../lib/nhost */ \"(api)/./lib/nhost.ts\");\n/* harmony import */ var _lib_user_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../lib/user-store */ \"(api)/./lib/user-store.ts\");\n\n\n\n\nconst authOptions = {\n    providers: [\n        next_auth_providers_credentials__WEBPACK_IMPORTED_MODULE_1___default()({\n            name: \"credentials\",\n            credentials: {\n                identifier: {\n                    label: \"Email or Phone\",\n                    type: \"text\"\n                },\n                password: {\n                    label: \"Password\",\n                    type: \"password\"\n                }\n            },\n            async authorize (credentials) {\n                console.log(\"\\uD83D\\uDD10 NextAuth authorize called with:\", {\n                    identifier: credentials?.identifier\n                });\n                if (!credentials?.identifier || !credentials?.password) {\n                    console.log(\"❌ Missing credentials\");\n                    return null;\n                }\n                try {\n                    // Check if identifier is email (contains @) or phone number\n                    const isEmail = credentials.identifier.includes(\"@\");\n                    // Try Nhost authentication first (only for email)\n                    if (isEmail && \"true\" !== \"false\") {\n                        try {\n                            console.log(\"\\uD83D\\uDD10 Attempting Nhost authentication for:\", credentials.identifier);\n                            console.log(\"\\uD83C\\uDF10 Nhost Config:\", {\n                                subdomain: \"sbpnfqrsnvtyvkgldcco\",\n                                region: \"eu-central-1\",\n                                useNhost: \"true\"\n                            });\n                            const authResponse = await _lib_nhost__WEBPACK_IMPORTED_MODULE_2__.nhost.auth.signIn({\n                                email: credentials.identifier,\n                                password: credentials.password\n                            });\n                            console.log(\"\\uD83D\\uDCCB Nhost auth response:\", {\n                                hasError: !!authResponse.error,\n                                hasSession: !!authResponse.session,\n                                hasUser: !!authResponse.session?.user,\n                                error: authResponse.error\n                            });\n                            if (authResponse.error) {\n                                console.error(\"❌ Nhost auth error details:\", {\n                                    message: authResponse.error.message,\n                                    status: authResponse.error.status,\n                                    error: authResponse.error\n                                });\n                                throw new Error(`Nhost authentication failed: ${authResponse.error.message || \"Unknown error\"}`);\n                            }\n                            if (authResponse.session?.user) {\n                                console.log(\"✅ Nhost authentication successful for user:\", authResponse.session.user.email);\n                                // Get user profile data from direct database\n                                console.log(\"\\uD83D\\uDD0D Fetching user profile data from direct database...\");\n                                const user = await _lib_user_store__WEBPACK_IMPORTED_MODULE_3__.userStore.findUserByEmail(credentials.identifier);\n                                if (user) {\n                                    console.log(\"✅ User profile found, returning complete user data\");\n                                    return {\n                                        id: user.id,\n                                        email: user.email,\n                                        name: user.display_name,\n                                        phone: user.phone || \"\",\n                                        walletBalance: user.walletBalance || 0,\n                                        bonusWallet: user.bonusWallet || 0,\n                                        totalReferrals: user.totalReferrals || 0,\n                                        referralCode: user.referralCode || \"\",\n                                        emailVerified: !!user.emailVerified,\n                                        // Store Nhost access token for GraphQL requests\n                                        accessToken: authResponse.session.accessToken,\n                                        refreshToken: authResponse.session.refreshToken\n                                    };\n                                } else {\n                                    console.log(\"⚠️ User authenticated but no profile found in userStore\");\n                                    // Return basic user data from Nhost session\n                                    return {\n                                        id: authResponse.session.user.id,\n                                        email: authResponse.session.user.email || \"\",\n                                        name: authResponse.session.user.displayName || \"\",\n                                        phone: \"\",\n                                        walletBalance: 0,\n                                        bonusWallet: 0,\n                                        totalReferrals: 0,\n                                        referralCode: \"\",\n                                        emailVerified: !!authResponse.session.user.emailVerified,\n                                        // Store Nhost access token for GraphQL requests\n                                        accessToken: authResponse.session.accessToken,\n                                        refreshToken: authResponse.session.refreshToken\n                                    };\n                                }\n                            } else {\n                                console.error(\"❌ Nhost auth response missing session or user\");\n                                throw new Error(\"Nhost authentication incomplete - no session returned\");\n                            }\n                        } catch (nhostError) {\n                            console.error(\"❌ Nhost authentication failed with error:\", nhostError);\n                            console.error(\"\\uD83D\\uDD04 Falling back to userStore authentication\");\n                        }\n                    } else {\n                        console.log(\"⏭️ Nhost authentication skipped (phone login or NEXT_PUBLIC_USE_NHOST=false)\");\n                    }\n                    // Fallback to direct database authentication\n                    console.log(\"\\uD83D\\uDD04 Using direct database authentication for:\", credentials.identifier);\n                    const user = await _lib_user_store__WEBPACK_IMPORTED_MODULE_3__.userStore.findUserByEmailOrPhone(credentials.identifier);\n                    if (!user) {\n                        console.log(\"❌ User not found in database\");\n                        throw new Error(\"Invalid credentials\");\n                    }\n                    // For direct database, we need to verify password manually\n                    const isValid = await _lib_user_store__WEBPACK_IMPORTED_MODULE_3__.userStore.verifyPasswordByEmailOrPhone(credentials.identifier, credentials.password);\n                    if (!isValid) {\n                        console.log(\"❌ Invalid password\");\n                        throw new Error(\"Invalid credentials\");\n                    }\n                    console.log(\"✅ Direct database authentication successful\");\n                    // Return user object for NextAuth\n                    return {\n                        id: user.id,\n                        email: user.email,\n                        name: user.display_name,\n                        phone: user.phone || \"\",\n                        walletBalance: user.walletBalance || 0,\n                        bonusWallet: user.bonusWallet || 0,\n                        totalReferrals: user.totalReferrals || 0,\n                        referralCode: user.referralCode || \"\",\n                        emailVerified: !!user.emailVerified\n                    };\n                } catch (error) {\n                    console.error(\"Authentication error:\", error);\n                    return null;\n                }\n            }\n        })\n    ],\n    session: {\n        strategy: \"jwt\",\n        maxAge: 30 * 24 * 60 * 60\n    },\n    callbacks: {\n        async jwt ({ token, user }) {\n            if (user) {\n                token.id = user.id;\n                token.phone = user.phone;\n                token.walletBalance = user.walletBalance;\n                token.bonusWallet = user.bonusWallet;\n                token.totalReferrals = user.totalReferrals;\n                token.referralCode = user.referralCode;\n                token.emailVerified = !!user.emailVerified;\n                // Store Nhost tokens\n                token.accessToken = user.accessToken;\n                token.refreshToken = user.refreshToken;\n            }\n            return token;\n        },\n        async session ({ session, token }) {\n            if (token) {\n                session.user.id = token.id;\n                session.user.phone = token.phone;\n                session.user.walletBalance = token.walletBalance;\n                session.user.bonusWallet = token.bonusWallet;\n                session.user.totalReferrals = token.totalReferrals;\n                session.user.referralCode = token.referralCode;\n                session.user.emailVerified = token.emailVerified;\n                // Include Nhost tokens in session\n                session.accessToken = token.accessToken;\n                session.refreshToken = token.refreshToken;\n            }\n            return session;\n        }\n    },\n    pages: {\n        signIn: \"/login\",\n        error: \"/auth/error\"\n    },\n    secret: process.env.NEXTAUTH_SECRET\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (next_auth__WEBPACK_IMPORTED_MODULE_0___default()(authOptions));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/auth/[...nextauth].ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fauth%2F%5B...nextauth%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cauth%5C%5B...nextauth%5D.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();